1) Draw a tree for which the preorder and inorder traversals generate the same sequence.

A tree will have the same inorder and oreorder traversals if all the left sub tree is null.

               4
                 \
                  7
                 /  \
              null    9


2) Design an algorithm (pseudocode or prose) to check if a binary tree is a binary search tree.

array = tree.elements         |  return the elements of binary tree in a inorder traversal in an array
if array == array.sorted()    |  check if the array is sorted, must be sorted if it is BST
  return true                   
else
  return false

3) Design an algorithm (pseudocode or prose) to check if a binary tree is perfectly balanced (smallest height possible for the 
number of nodes)

if  node is nil, return true
get height of left subtree and right subtree
check if the difference between the height of the left subtree and the height of the right subtree is less than or equal to 1
recurse to find out if the left subtree is balanced and the right subtree is balanced
